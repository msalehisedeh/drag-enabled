!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@sedeh/drag-enabled",["exports","@angular/core","@angular/common"],e):e((t.sedeh=t.sedeh||{},t.sedeh["drag-enabled"]={}),t.ng.core,t.ng.common)}(this,function(t,r,e){"use strict";var n=function(){function t(){this.data={}}return t.prototype.setData=function(t,e){this.data[t]=e},t.prototype.getData=function(t){return this.data[t]},t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[]},t}(),a=function(){function t(t,e){this.dataTransfer=t,this.el=e,this.dropEffect="move",this.dropEnabled=function(t){return!0},this.onDragEnter=new r.EventEmitter,this.onDragLeave=new r.EventEmitter,this.onDrop=new r.EventEmitter,this.onDragOver=new r.EventEmitter}return t.prototype.createDropEvent=function(t){return{source:this.dataTransfer.getData("source"),destination:{medium:this.medium,node:this.el.nativeElement,clientX:t.clientX,clientY:t.clientY}}},t.prototype.drop=function(t){t.preventDefault();var e=this.createDropEvent(t);this.el.nativeElement.classList.remove("drag-over"),this.dropEnabled(e)&&this.onDrop.emit(e)},t.prototype.dragEnter=function(t){t.preventDefault();var e=this.createDropEvent(t);this.dropEnabled(e)?(t.dataTransfer.dropEffect=this.dropEffect,this.el.nativeElement.classList.add("drag-over"),this.onDragEnter.emit(e)):this.el.nativeElement.classList.remove("drag-over")},t.prototype.dragLeave=function(t){t.preventDefault(),this.el.nativeElement.classList.remove("drag-over"),this.onDragLeave.emit(t)},t.prototype.dragOver=function(t){var e=this.createDropEvent(t);this.dropEnabled(e)?(t.preventDefault(),this.el.nativeElement.classList.add("drag-over"),this.onDragOver.emit(e)):this.el.nativeElement.classList.remove("drag-over")},t.decorators=[{type:r.Directive,args:[{selector:"[dropEnabled]"}]}],t.ctorParameters=function(){return[{type:n},{type:r.ElementRef}]},t.propDecorators={medium:[{type:r.Input,args:["medium"]}],dropEffect:[{type:r.Input}],dropEnabled:[{type:r.Input,args:["dropEnabled"]}],onDragEnter:[{type:r.Output}],onDragLeave:[{type:r.Output}],onDrop:[{type:r.Output}],onDragOver:[{type:r.Output}],drop:[{type:r.HostListener,args:["drop",["$event"]]}],dragEnter:[{type:r.HostListener,args:["dragenter",["$event"]]}],dragLeave:[{type:r.HostListener,args:["dragleave",["$event"]]}],dragOver:[{type:r.HostListener,args:["dragover",["$event"]]}]},t}(),o=function(){function t(t,e){this.dataTransfer=t,this.el=e,this.dragEffect="move",this.dragEnabled=function(t){return!0},this.onDragStart=new r.EventEmitter,this.onDragEnd=new r.EventEmitter,this.onDrag=new r.EventEmitter}return t.prototype.dragStart=function(t){t.stopPropagation();var e=this.el.nativeElement.getBoundingClientRect(),r={medium:this.medium,node:this.el.nativeElement,clientX:t.clientX,clientY:t.clientY,offset:{x:t.clientX-e.left,y:t.clientY-e.top}};this.dragEnabled(r)&&(t.dataTransfer.effectAllowed=this.dragEffect,t.dataTransfer.setData("makeItTick","true"),this.dataTransfer.setData("source",r),this.onDragStart.emit(r))},t.prototype.drag=function(t){var e=this.dataTransfer.getData("source");e.clientX=t.clientX,e.clientY=t.clientY,this.dragEnabled(e)&&this.onDrag.emit(e)},t.prototype.dragEnd=function(t){t.stopPropagation();var e=this.dataTransfer.getData("source");this.onDragEnd.emit(e),this.el.nativeElement.classList.remove("drag-over")},t.decorators=[{type:r.Directive,args:[{selector:"[dragEnabled]",host:{"[draggable]":"true"}}]}],t.ctorParameters=function(){return[{type:n},{type:r.ElementRef}]},t.propDecorators={medium:[{type:r.Input,args:["medium"]}],dragEffect:[{type:r.Input,args:["dragEffect"]}],dragEnabled:[{type:r.Input,args:["dragEnabled"]}],onDragStart:[{type:r.Output}],onDragEnd:[{type:r.Output}],onDrag:[{type:r.Output}],dragStart:[{type:r.HostListener,args:["dragstart",["$event"]]}],drag:[{type:r.HostListener,args:["drag",["$event"]]}],dragEnd:[{type:r.HostListener,args:["dragend",["$event"]]}]},t}(),i=function(){function t(t,e){this.dataTransfer=t,this.el=e,this.dragEffect="move",this.dragInDocument=function(t){return!0},this.onDragStart=new r.EventEmitter,this.onDragEnd=new r.EventEmitter,this.onDrag=new r.EventEmitter}return t.prototype.dragStart=function(t){t.stopPropagation();var e=this.el.nativeElement.getBoundingClientRect(),r={medium:this.medium,node:this.el.nativeElement,clientX:t.clientX,clientY:t.clientY,offset:{x:t.clientX-e.left,y:t.clientY-e.top}};this.dragInDocument(r)&&(t.dataTransfer.effectAllowed=this.dragEffect,t.dataTransfer.setData("makeItTick","true"),this.dataTransfer.setData("source",r),this.onDragStart.emit(r))},t.prototype.drag=function(t){var e=this.dataTransfer.getData("source");e.clientX=t.clientX,e.clientY=t.clientY,this.dragInDocument(e)&&this.onDrag.emit(e)},t.prototype.dragEnd=function(t){t.stopPropagation();var e=this.dataTransfer.getData("source");this.onDragEnd.emit(e),this.el.nativeElement.classList.remove("drag-over")},t.decorators=[{type:r.Directive,args:[{selector:"[dragInDocument]",host:{"[draggable]":"true"}}]}],t.ctorParameters=function(){return[{type:n},{type:r.ElementRef}]},t.propDecorators={medium:[{type:r.Input,args:["medium"]}],dragEffect:[{type:r.Input,args:["dragEffect"]}],dragInDocument:[{type:r.Input,args:["dragInDocument"]}],onDragStart:[{type:r.Output}],onDragEnd:[{type:r.Output}],onDrag:[{type:r.Output}],dragStart:[{type:r.HostListener,args:["dragstart",["$event"]]}],drag:[{type:r.HostListener,args:["document:dragover",["$event"]]}],dragEnd:[{type:r.HostListener,args:["document:dragend",["$event"]]}]},t}(),s=function(){function t(){}return t.decorators=[{type:r.NgModule,args:[{imports:[e.CommonModule],declarations:[o,i,a],exports:[o,i,a],entryComponents:[],providers:[n],schemas:[r.CUSTOM_ELEMENTS_SCHEMA]}]}],t}();t.DropDirective=a,t.DragDirective=o,t.DragInDocumentDirective=i,t.DragDropModule=s,t.Éµa=n,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=sedeh-drag-enabled.umd.min.js.map