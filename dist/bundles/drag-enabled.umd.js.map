{"version":3,"file":"drag-enabled.umd.js.map","sources":["ng://drag-enabled/src/app/drag-enabled/datatransfer.ts","ng://drag-enabled/src/app/drag-enabled/drop.directive.ts","ng://drag-enabled/src/app/drag-enabled/drag.directive.ts","ng://drag-enabled/src/app/drag-enabled/drag-only.directive.ts","ng://drag-enabled/src/app/drag-enabled/dragdrop.module.ts"],"sourcesContent":["/*\r\n * The main purpose for this object is to fix the short coming of drag event dataTransfer object.\r\n * It accepts only String values. However, if there is a need to pass an object, this singletoncan \r\n * come to the resecue. \r\n */\r\nimport { Injectable, Inject  } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataTransfer {\r\n    \r\n    private data: any = {};\r\n\r\n    constructor() {}\r\n\r\n    setData(name, value){\r\n        this.data[name] = value;\r\n    }\r\n\r\n    getData(name) {\r\n        return this.data[name];\r\n    }\r\n            \r\n}","import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DataTransfer } from './datatransfer';\r\nimport { DropEvent } from './drag-drop.interfaces';\r\n\r\n\r\n@Directive({\r\n    selector: '[dropEnabled]'\r\n})\r\nexport class DropDirective {\r\n    \r\n    @Input('medium')\r\n    medium: any;\r\n        \r\n    @Input()\r\n    dropEffect = \"move\";\r\n        \r\n    @Input(\"dropEnabled\")\r\n    dropEnabled = (event: DropEvent) => true;\r\n\r\n    @Output()\r\n    onDragEnter: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragLeave: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrop: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragOver: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private el: ElementRef\r\n    ) {}\r\n    \r\n\tprivate createDropEvent(event): DropEvent {\r\n\t\treturn {\r\n            source: this.dataTransfer.getData(\"source\"),\r\n            destination: {\r\n                medium: this.medium,\r\n                node: this.el.nativeElement,\r\n                clientX: event.clientX,\r\n                clientY: event.clientY\r\n            }\r\n\t\t};\r\n\t}\r\n\r\n    @HostListener('drop', ['$event'])\r\n    drop(event) {\r\n        event.preventDefault();\r\n        const dropEvent = this.createDropEvent(event);\r\n\r\n        this.el.nativeElement.classList.remove(\"drag-over\");\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            this.onDrop.emit(dropEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragenter', ['$event']) \r\n    dragEnter(event) {\r\n        event.preventDefault();\r\n        const dropEvent = this.createDropEvent(event);\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            event.dataTransfer.dropEffect = this.dropEffect;\r\n\r\n            this.el.nativeElement.classList.add(\"drag-over\");\r\n            this.onDragEnter.emit(dropEvent);\r\n        } else {\r\n            this.el.nativeElement.classList.remove(\"drag-over\");\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragleave', ['$event']) \r\n    dragLeave(event) {\r\n        event.preventDefault();\r\n                \r\n        this.el.nativeElement.classList.remove(\"drag-over\");\r\n        this.onDragLeave.emit(event);\r\n    }\r\n    \r\n    @HostListener('dragover', ['$event']) \r\n    dragOver(event) {\r\n        const dropEvent = this.createDropEvent(event);\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            event.preventDefault();\r\n            this.el.nativeElement.classList.add(\"drag-over\");\r\n            this.onDragOver.emit(dropEvent);\r\n        } else {\r\n            this.el.nativeElement.classList.remove(\"drag-over\");\r\n        }\r\n    }\r\n}","import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\nimport { DataTransfer } from './datatransfer';\r\nimport { DragEvent } from './drag-drop.interfaces';\r\n\r\n@Directive({\r\n    selector: '[dragEnabled]',\r\n    host: {\r\n        '[draggable]': 'true'\r\n    }\r\n})\r\nexport class DragDirective {\r\n    \r\n    @Input(\"medium\")\r\n    medium: any;\r\n    \r\n    @Input(\"dragEffect\")\r\n    dragEffect = \"move\";\r\n    \r\n    @Input(\"dragEnabled\")\r\n    dragEnabled = (event) => true;\r\n    \r\n    @Output()\r\n    onDragStart: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragEnd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrag: EventEmitter<any> = new EventEmitter();\r\n    \r\n    private handle: any;\r\n        \r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    @HostListener('dragstart', ['$event']) \r\n    dragStart(event) {\r\n        event.stopPropagation();\r\n\r\n        const rect = this.el.nativeElement.getBoundingClientRect();\r\n        const dragEvent: DragEvent = {\r\n            medium: this.medium,\r\n            node: this.el.nativeElement,\r\n            clientX: event.clientX,\r\n            clientY: event.clientY,\r\n            offset: {\r\n                x: event.clientX - rect.left, \r\n                y: event.clientY - rect.top\r\n            }\r\n        }\r\n        if (this.dragEnabled(dragEvent)) {\r\n            event.dataTransfer.effectAllowed = this.dragEffect;\r\n            event.dataTransfer.setData(\"makeItTick\",\"true\");// this is needed just to make drag/drop event trigger.\r\n\r\n            this.dataTransfer.setData(\"source\", dragEvent);\r\n            this.onDragStart.emit(dragEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('drag', ['$event']) \r\n    drag(event) {\r\n        const dragEvent: DragEvent = this.dataTransfer.getData(\"source\");\r\n\r\n        dragEvent.clientX = event.clientX;\r\n        dragEvent.clientY = event.clientY;\r\n        \r\n        if (this.dragEnabled(dragEvent)) {\r\n            this.onDrag.emit(dragEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragend', ['$event']) \r\n    dragEnd(event) {\r\n        event.stopPropagation();\r\n        const dragEvent: DragEvent = this.dataTransfer.getData(\"source\");        \r\n        this.onDragEnd.emit(dragEvent);\r\n        this.el.nativeElement.classList.remove(\"drag-over\");\r\n    }\r\n}\r\n","/*\r\n * This directive is best suited for dragging an element with confinement of document.  it is not recomended\r\n * to be used in conjunction with a drop operation if an element is to be dropped on another element within \r\n * a heirarchy of nodes.\r\n */\r\nimport {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\nimport { DataTransfer } from './datatransfer';\r\nimport { DragEvent } from './drag-drop.interfaces';\r\n\r\n@Directive({\r\n    selector: '[dragInDocument]',\r\n    host: {\r\n        '[draggable]': 'true'\r\n    }\r\n})\r\nexport class DragInDocumentDirective {\r\n    \r\n    @Input(\"medium\")\r\n    medium: any;\r\n    \r\n    @Input(\"dragEffect\")\r\n    dragEffect = \"move\";\r\n    \r\n    @Input(\"dragInDocument\")\r\n    dragInDocument = (event) => true;\r\n    \r\n    @Output()\r\n    onDragStart: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragEnd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrag: EventEmitter<any> = new EventEmitter();\r\n    \r\n    private handle: any;\r\n        \r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    @HostListener('dragstart', ['$event']) \r\n    dragStart(event) {\r\n        event.stopPropagation();\r\n\r\n        const rect = this.el.nativeElement.getBoundingClientRect();\r\n        const dragEvent: DragEvent = {\r\n            medium: this.medium,\r\n            node: this.el.nativeElement,\r\n            clientX: event.clientX,\r\n            clientY: event.clientY,\r\n            offset: {\r\n                x: event.clientX - rect.left, \r\n                y: event.clientY - rect.top\r\n            }\r\n        }\r\n        if (this.dragInDocument(dragEvent)) {\r\n            event.dataTransfer.effectAllowed = this.dragEffect;\r\n            event.dataTransfer.setData(\"makeItTick\",\"true\");// this is needed just to make drag/drop event trigger.\r\n\r\n            this.dataTransfer.setData(\"source\", dragEvent);\r\n            this.onDragStart.emit(dragEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('document:dragover', ['$event']) \r\n    drag(event) {\r\n        const dragEvent: DragEvent = this.dataTransfer.getData(\"source\");\r\n\r\n        dragEvent.clientX = event.clientX;\r\n        dragEvent.clientY = event.clientY;\r\n        \r\n        if (this.dragInDocument(dragEvent)) {\r\n            this.onDrag.emit(dragEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('document:dragend', ['$event']) \r\n    dragEnd(event) {\r\n        event.stopPropagation();\r\n        const dragEvent: DragEvent = this.dataTransfer.getData(\"source\");        \r\n        this.onDragEnd.emit(dragEvent);\r\n        this.el.nativeElement.classList.remove(\"drag-over\");\r\n    }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DataTransfer } from './datatransfer';\r\nimport { DragDirective } from './drag.directive';\r\nimport { DragInDocumentDirective } from './drag-only.directive';\r\nimport { DropDirective } from './drop.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n\tCommonModule\r\n  ],\r\n  declarations: [\r\n\tDragDirective,\r\n    DragInDocumentDirective,\r\n\tDropDirective\r\n  ],\r\n  exports: [\r\n\tDragDirective,\r\n\tDragInDocumentDirective,\r\n\tDropDirective\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n    DataTransfer\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class DragDropModule {}\r\n"],"names":["Injectable","EventEmitter","Directive","ElementRef","Input","Output","HostListener","NgModule","CommonModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}
